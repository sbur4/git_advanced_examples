1. Отмена изменений в рабочем каталоге до индекса:
git restore <file>
Эта команда отменяет изменения в указанном файле, возвращая его к состоянию, зафиксированному в последнем коммите, исключая индекс.

2. Отмена изменений в индексе (отмена git add):
git restore --staged <file>
Эта команда отменяет индексацию (или "staging") указанного файла, убирая его из индекса. Файл остается неизменным в рабочем каталоге.

3. Отмена изменений в индексе и рабочем каталоге:
git restore --source=HEAD --staged --worktree <file>
Эта команда отменяет изменения в указанном файле и в индексе, возвращая его к состоянию, зафиксированному в последнем коммите. Файл также будет обновлен в вашем рабочем каталоге.

4. Отмена изменений в неотслеживаемом файле:
git restore --source=HEAD --staged --worktree --untracked <file>
Эта команда отменяет изменения в указанном неотслеживаемом файле и удаляет его из рабочего каталога. Файлы, которые не были добавлены в Git, считаются неотслеживаемыми.

5. Отмена изменений во всех файлах в рабочем каталоге и индексе (опасно):
git restore --source=HEAD --staged --worktree .
Эта команда отменяет изменения во всех файлах в индексе и рабочем каталоге, возвращая их к состоянию последнего коммита. Однако будьте осторожны с этой командой, так как она может потерять ваши локальные изменения без возможности восстановления.

Обратите внимание, что параметры --source=HEAD, --staged, и --worktree указывают, где следует брать данные для восстановления. Вы можете комбинировать эти параметры в зависимости от вашей потребности.