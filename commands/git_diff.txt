1. git diff: Эта команда покажет разницу между вашим рабочим каталогом (текущими несохраненными изменениями) и последним фиксированным коммитом в вашей текущей ветке. Пример:
git diff

2. git diff <файл>: Вы можете указать имя файла, чтобы посмотреть разницу только для этого файла. Пример:
git diff myfile.txt

3. git diff <commit1> <commit2>: Этот формат позволяет сравнивать два конкретных коммита. Пример:
git diff abc123 def456

4. git diff <ветка1>..<ветка2>: Сравнивает разницу между двумя разными ветками. Пример:
git diff feature-branch master

5. git diff --cached: Эта команда сравнивает разницу между индексом (подготовленными изменениями, которые будут включены в следующий коммит) и последним фиксированным коммитом. Это полезно, чтобы увидеть, какие изменения будут включены в следующий коммит. Пример:
git diff --cached

6. git diff --stat: Этот флаг показывает краткую статистику изменений, указывая, сколько строк было добавлено и удалено в каждом файле. Пример:
git diff --stat

7. git diff --color-words: Показывает разницу между словами, а не строками. Это полезно, если вы хотите увидеть изменения внутри строк более подробно. Пример:
git diff --color-words

8. git diff HEAD: Сравнивает текущий рабочий каталог с последним коммитом в текущей ветке (HEAD).

Это лишь несколько примеров команд git diff. Эта команда очень мощная и предоставляет множество опций для сравнения изменений в вашем репозитории Git. Вы можете изучить дополнительные опции и флаги в официальной документации Git, выполнив команду git help diff или прочитав man git-diff.